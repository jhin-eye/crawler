name: CI Pipeline for crawler-core

on:
  push:
    tags:
      - 'v*'  # 예: v0.1.0, v1.2.3

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v2

      # 2. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew  # 실행 권한 추가

      # 3. Build the project using Gradle (or Maven if needed)
      - name: Build with Gradle
        run: ./gradlew build -x test # If using Maven, change this to `mvn clean install`

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: yanoos555/crawler-core:${{ steps.extract_tag.outputs.TAG }}

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_test  # Deploy only after build & tests pass
#    steps:
#      # 1. Checkout code
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      # 2. Set up kubectl
#      - name: Set up Kubernetes
#        uses: azure/setup-kubernetes@v1
#        with:
#          kubeconfig: ${{ secrets.KUBE_CONFIG }}
#
#      # 3. Helm upgrade & deploy with versioned image tag
#      - name: Deploy to Kubernetes using Helm
#        run: |
#          IMAGE_TAG="crawler-core-v$(git describe --tags)"
#          helm upgrade --install crawler-core ./crawler-core \
#            --namespace jhin-eye \
#            --create-namespace \
#            -f ./crawler-core/values.yaml \
#            --set-string secrets.postgresPassword="${{ secrets.POSTGRES_PASSWORD }}" \
#            --set-string secrets.jwtSecretKey="${{ secrets.JWT_SECRET_KEY }}" \
#            --set-string secrets.kakaoClientId="${{ secrets.KAKAO_CLIENT_ID }}" \
#            --set-string secrets.kakaoClientSecret="${{ secrets.KAKAO_CLIENT_SECRET }}" \
#            --set image.tag=${IMAGE_TAG}
